/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { App } from "src/app/app";
export namespace Components {
    interface ApIcon {
        "icon": 'github' | 'google' | 'image' | 'trash';
    }
    interface ApLoading {
    }
    interface ApModal {
    }
    interface AppAnnounce {
        "announceID": string;
        "app": App;
    }
    interface AppHome {
        "app": App;
    }
    interface AppPost {
        "announceID": string;
        "app": App;
        "postID": string;
    }
    interface AppRoot {
    }
}
declare global {
    interface HTMLApIconElement extends Components.ApIcon, HTMLStencilElement {
    }
    var HTMLApIconElement: {
        prototype: HTMLApIconElement;
        new (): HTMLApIconElement;
    };
    interface HTMLApLoadingElement extends Components.ApLoading, HTMLStencilElement {
    }
    var HTMLApLoadingElement: {
        prototype: HTMLApLoadingElement;
        new (): HTMLApLoadingElement;
    };
    interface HTMLApModalElement extends Components.ApModal, HTMLStencilElement {
    }
    var HTMLApModalElement: {
        prototype: HTMLApModalElement;
        new (): HTMLApModalElement;
    };
    interface HTMLAppAnnounceElement extends Components.AppAnnounce, HTMLStencilElement {
    }
    var HTMLAppAnnounceElement: {
        prototype: HTMLAppAnnounceElement;
        new (): HTMLAppAnnounceElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppPostElement extends Components.AppPost, HTMLStencilElement {
    }
    var HTMLAppPostElement: {
        prototype: HTMLAppPostElement;
        new (): HTMLAppPostElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLElementTagNameMap {
        "ap-icon": HTMLApIconElement;
        "ap-loading": HTMLApLoadingElement;
        "ap-modal": HTMLApModalElement;
        "app-announce": HTMLAppAnnounceElement;
        "app-home": HTMLAppHomeElement;
        "app-post": HTMLAppPostElement;
        "app-root": HTMLAppRootElement;
    }
}
declare namespace LocalJSX {
    interface ApIcon {
        "icon"?: 'github' | 'google' | 'image' | 'trash';
    }
    interface ApLoading {
    }
    interface ApModal {
        "onClose"?: (event: CustomEvent<any>) => void;
    }
    interface AppAnnounce {
        "announceID"?: string;
        "app"?: App;
    }
    interface AppHome {
        "app"?: App;
    }
    interface AppPost {
        "announceID"?: string;
        "app"?: App;
        "postID"?: string;
    }
    interface AppRoot {
    }
    interface IntrinsicElements {
        "ap-icon": ApIcon;
        "ap-loading": ApLoading;
        "ap-modal": ApModal;
        "app-announce": AppAnnounce;
        "app-home": AppHome;
        "app-post": AppPost;
        "app-root": AppRoot;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ap-icon": LocalJSX.ApIcon & JSXBase.HTMLAttributes<HTMLApIconElement>;
            "ap-loading": LocalJSX.ApLoading & JSXBase.HTMLAttributes<HTMLApLoadingElement>;
            "ap-modal": LocalJSX.ApModal & JSXBase.HTMLAttributes<HTMLApModalElement>;
            "app-announce": LocalJSX.AppAnnounce & JSXBase.HTMLAttributes<HTMLAppAnnounceElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-post": LocalJSX.AppPost & JSXBase.HTMLAttributes<HTMLAppPostElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
        }
    }
}
