name: CI - client - ios

on: workflow_dispatch

jobs:
  build:
    environment: build

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      # https://docs.github.com/en/actions/guides/installing-an-apple-certificate-on-macos-runners-for-xcode-development
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets._APPLE_DISTRIBUTION_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets._APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets._APPLE_AD_HOC_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets._APPLE_KEYCHAN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - run: echo "$V" > shared/src/appenv.env.ts
        env:
          V: ${{ secrets._APPENV_TS }}

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'

      - uses: actions/cache@v2
        with:
          path: ./client/ios/App/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('./client/ios/App/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - run: npm install
        working-directory: ./client

      - run: mkdir cap && echo "hello" > cap/index.html && npx cap sync ios
        working-directory: ./client

      #- run: npm run build.ios
      #  working-directory: ./client

      - run: >-
          xcodebuild 
          -workspace App.xcworkspace
          -scheme App
          -archivePath $RUNNER_TEMP/announcing.xcarchive 
          archive
        working-directory: ./client/ios/App

      - run: >-
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/announcing.xcarchive
          -exportPath $RUNNER_TEMP/announcing.ipa 
          -exportOptionsPlist ./client/ios-export-adhoc.plist

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
